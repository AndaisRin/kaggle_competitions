'''
D. Управление маркетплейсом

Управление маркетплейсом для платформы доставки подразумевает предсказание будущих заявок и определение количества заявок,
которые невозможно выполнить имеющимися курьерами. Задача включает в себя анализ исторических данных о создаваемых заявках,
прогнозирование их количества по типам на будущий час, и распределение имеющихся курьеров между типами заявок.
Цель - определить среднее количество заявок каждого типа, которые не могут быть выполнены,
и таким образом оценить баланс между спросом и предложением на маркетплейсе.

Формат ввода
В первой строке задаются два целых числа:
m (1≤m≤10) — количество крупных клиентов, которые пользуются платформой доставки; и s (10≤s≤10000) — количество имеющихся курьеров.
Во второй строке задается целое число n (1≤n≤1680) — количество часов, для которых удалось собрать информацию о созданных
заявках по историческим данным.
Далее следует n строк, в каждой из которых записана информация о созданных заявок: сначала три целых числа
week_i (1≤week_i ≤10), day_i (1≤day_i ≤7), hour_i (1≤hour_i≤24) - номер недели, дня и часа, для которых собрана информация
 о созданных заявках; а затем m целых чисел dji (0≤dji≤1000) - число созданных заявок типа j (1≤j≤m), созданных в данный период времени.
 Все числа разделены одиночными пробелами. Обратите внимание, что данных за некоторые часы может не быть.
После этого в отдельной строке задается целое q (1≤q≤1680) — количество запросов.
Далее следует q строк, в каждой из которых задается запрос одного из двух видов:
- если первое число в строке 1, то это запрос сообщает информацию о созданных заявках в разбивке по типам:
далее в этой же строке следуют сначала три целых числа week_i (11≤week_i≤20), day_i (1≤day_i≤7), hour_i (1≤hour_i≤24) - номер недели, дня и часа,
для которых собрана информация о созданных заявках;
а затем m целых чисел dji (0≤dij≤1000) - число созданных заявок типа j (1≤j≤m), созданных в данный период времени.
- если первое число в строке 2, то это запрос на получение предсказания: далее в этой же строке следуют сначала три целых числа
week_i (11≤week_i≤20), day_i (1≤day_i≤7), hour_i (1≤hour_i≤24) - номер недели, дня и часа, для которых нужно сделать предсказание.
Все числа разделены одиночными пробелами.

Формат вывода
Выведите m вещественных чисел, разделенных пробелами, - среднее количество заявок каждого типа, которое необходимо "срезать"
в моменты времени, для которых приходил запрос второго типа.
Ответ считается правильным, если каждое число отличается от истинного не более, чем на 1.

Пример
Ввод:
3 4
3
1 1 10 0 7 3
2 1 10 0 5 3
3 1 10 0 6 3
2
1 11 1 9 1 5 2
2 11 1 10

Вывод:
0.00000000000000 4.00000000000000 1.00000000000000
'''


m, s = map(int, input().split())
n = int(input())
requests = {}
for _ in range(n):
    week, day, hour, *dji = map(int, input().split())
    requests[(week, day, hour)] = dji

q = int(input())
results = {}
for _ in range(q):
    query_type, week, day, hour, *dji = map(int, input().split())
    if query_type == 1:
        requests[(week, day, hour)] = dji
    else:
        total_requests = [0] * m
        for (w, d, h), counts in requests.items():
            if week - w <= 1 and day == d and hour - h <= 1:
                for i in range(m):
                    total_requests[i] += counts[i]
        results[(week, day, hour)] = total_requests

averages = [sum(counts) / len(results) for counts in zip(*results.values())]
print(' '.join(f'{avg:.1f}' for avg in averages))